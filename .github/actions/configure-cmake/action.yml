name: 'Configure CMake'
description: 'Common logic for CMake configuration'
inputs:
  warnings_as_errors:
    description: 'Treat warnings as errors'
    required: false
    default: 'OFF'
  custom_flags:
    description: 'Custom CMake configuration flags'
    required: false

runs:
  using: "composite"
  steps:
    # Uncomment when using external dependencies, so they will be cached
    # - name: Cache deps
    #   uses: actions/cache@v4
    #   id: cache-deps
    #   # make the key depend on the dependency version
    #   with:
    #     path: |
    #       ${{ env.BUILD_DIR }}/_deps
    #     key: cache-${{ matrix.cmake_generator }}-${{ matrix.os }}-${{ env.CXX }}-${{ env.BUILD_TYPE }}

    # NOTE: GH Actions does not allow updating the cache yet
    # Using the workaround found here: https://github.com/actions/cache/issues/171
    # Since this cache is small, it should not fill the cache too much
    - name: Cache Ninja deps
      uses: actions/cache@v4
      if: matrix.cmake_generator == 'Ninja'
      id: cache-deps-ninja
      with:
        path: |
          ${{ env.BUILD_DIR }}/.ninja_deps
          ${{ env.BUILD_DIR }}/.ninja_log
        key: ${{ matrix.os }}-${{ matrix.cxx }}-ninja-cache-${{ hashFiles('CMakeLists.txt') }}
        restore-keys: ${{ matrix.os }}-${{ matrix.cxx }}-ninja-cache-


    - uses: lukka/get-cmake@latest
    - name: List $RUNNER_WORKSPACE before vcpkg is setup
      run: find $RUNNER_WORKSPACE
      shell: bash

    - name: Setup anew (or from cache) vcpkg (and does not build any package)
      uses: lukka/run-vcpkg@v11
      with:
        setupOnly: true
        # Location of the vcpkg as submodule of the repository.
        vcpkgDirectory: '${{ github.workspace }}/vcpkg'
        vcpkgGitCommitId: '57bd7102d9fd880daa1b0958692294c4a125f6d8'
        # Since the cache must be invalidated when content of the vcpkg.json file changes, let's
        # compute its hash and append this to the computed cache's key.
        appendedCacheKey: ${{ hashFiles( '**/vcpkg.json' ) }}
        vcpkgTriplet: ${{ matrix.triplet }}
        # Ensure the vcpkg artifacts are cached, they are generated in the 'CMAKE_BINARY_DIR/vcpkg_installed'.
        additionalCachedPaths: ${{ env.buildDir }}/vcpkg_installed
#        vcpkgJsonGlob: 'vcpkg.json'
#
    - name: 'Run CMake with Ninja, install dependencies with vcpkg, build with CMake'
      uses: lukka/run-cmake@v3
      with:
        cmakeListsOrSettingsJson: CMakeListsTxtBasic
        cmakeListsTxtPath: '${{ github.workspace }}/CMakeLists.txt'
        useVcpkgToolchainFile: true
        cmakeAppendedArgs: '-GNinja -DKANGARU_TEST=ON'
        buildDirectory: ${{ env.buildDir }}

    - run: |
        CMAKE_GENERATOR=${{ matrix.cmake_generator }} cmake -S ${GITHUB_WORKSPACE} -B ${{ env.BUILD_DIR }} \
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
          -DCMAKE_INSTALL_PREFIX=${GITHUB_WORKSPACE}/artifacts \
          -DGITHUB_ACTIONS=${GITHUB_ACTIONS} \
          -DWARNINGS_AS_ERRORS=${{ inputs.warnings_as_errors }} \
          ${{ inputs.custom_flags }}
      shell: bash

# https://docs.github.com/en/actions/creating-actions/creating-a-composite-action
# https://github.com/GuillaumeFalourd/poc-github-actions/blob/main/.github/workflows/36-local-action.yml
